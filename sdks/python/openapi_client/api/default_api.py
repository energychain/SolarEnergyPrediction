"""
    SolarEnergyPrediction

    The PV generation forecast for unmetered PV systems makes it possible to predict production of a PV system on an hourly basis for the next 4 days without having your own metering equipment or system-specific generation data.  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: dev@stromdao.com
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from openapi_client.api_client import ApiClient, Endpoint as _Endpoint
from openapi_client.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)


class DefaultApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client
        self.prediction_endpoint = _Endpoint(
            settings={
                'response_type': None,
                'auth': [],
                'endpoint_path': '/v2.0/solar/prediction',
                'operation_id': 'prediction',
                'http_method': 'GET',
                'servers': [
                    {
                        'url': "https://solarenergyprediction.p.rapidapi.com/",
                        'description': "Default RapidAPI",
                    },
                ]
            },
            params_map={
                'all': [
                    'x_rapid_api_key',
                    'x_rapid_api_host',
                    'lat',
                    'lon',
                    'zip',
                    'deg',
                    'az',
                    'wp',
                    'loss',
                    'plant',
                    'decoration',
                ],
                'required': [
                    'x_rapid_api_key',
                    'x_rapid_api_host',
                ],
                'nullable': [
                ],
                'enum': [
                    'x_rapid_api_host',
                    'decoration',
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                    ('x_rapid_api_host',): {

                        "SOLARENERGYPREDICTION.P.RAPIDAPI.COM": "solarenergyprediction.p.rapidapi.com"
                    },
                    ('decoration',): {

                        "FORECAST.SOLAR": "forecast.solar"
                    },
                },
                'openapi_types': {
                    'x_rapid_api_key':
                        (str,),
                    'x_rapid_api_host':
                        (str,),
                    'lat':
                        (float,),
                    'lon':
                        (float,),
                    'zip':
                        (str,),
                    'deg':
                        (int,),
                    'az':
                        (int,),
                    'wp':
                        (int,),
                    'loss':
                        (int,),
                    'plant':
                        (str,),
                    'decoration':
                        (str,),
                },
                'attribute_map': {
                    'x_rapid_api_key': 'X-RapidAPI-Key',
                    'x_rapid_api_host': 'X-RapidAPI-Host',
                    'lat': 'lat',
                    'lon': 'lon',
                    'zip': 'zip',
                    'deg': 'deg',
                    'az': 'az',
                    'wp': 'wp',
                    'loss': 'loss',
                    'plant': 'plant',
                    'decoration': 'decoration',
                },
                'location_map': {
                    'x_rapid_api_key': 'header',
                    'x_rapid_api_host': 'header',
                    'lat': 'query',
                    'lon': 'query',
                    'zip': 'query',
                    'deg': 'query',
                    'az': 'query',
                    'wp': 'query',
                    'loss': 'query',
                    'plant': 'query',
                    'decoration': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

    def prediction(
        self,
        x_rapid_api_key,
        x_rapid_api_host="solarenergyprediction.p.rapidapi.com",
        **kwargs
    ):
        """Retrieve PV Forecast without metering  # noqa: E501

        The PV generation forecast for unmetered PV systems makes it possible to predict production of a PV system on an hourly basis for the next 4 days without having your own metering equipment or system-specific generation data.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.prediction(x_rapid_api_key, x_rapid_api_host="solarenergyprediction.p.rapidapi.com", async_req=True)
        >>> result = thread.get()

        Args:
            x_rapid_api_key (str): API Key from rapidapi.com
            x_rapid_api_host (str): API Host to use (should be `solarenergyprediction.p.rapidapi.com` ). defaults to "solarenergyprediction.p.rapidapi.com", must be one of ["solarenergyprediction.p.rapidapi.com"]

        Keyword Args:
            lat (float): Geocode latitude of pv plant (required if parameter plant or zip is not given).. [optional]
            lon (float): Geocode longitude of pv plant (required if parameter plant or zip is not given).. [optional]
            zip (str): Zipcode (postalcode) - works only for Germany. If specified no lat/lon parameter is required.. [optional]
            deg (int): plane declination degrees, 0 (horizontal) … 90 (vertical). [optional]
            az (int): plant installation azimuth, -180 … 180 (-180 = north, -90 = east, 0 = south, 90 = west, 180 = north). [optional]
            wp (int): Installed Watt-Peak  (eq. kWp/1000). [optional]
            loss (int): System loss in percent (defaults to 14). [optional]
            plant (str): If specified all other query parameters will be taken from the stored value and must not be given with the query string.    Use as comma separated list of IDs to retrieve a forecast for multiple specifications.. [optional]
            decoration (str): Allows to use SolarPredictionAPI as a plug-in replacement for other APIs.    Supported decorations:    | `forecast.solar` | Output will be formated like [https://forecast.solar](http://doc.forecast.solar/doku.php?id=api:estimate#example) |  |----|----|. [optional] if omitted the server will use the default value of "forecast.solar"
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            None
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['x_rapid_api_key'] = \
            x_rapid_api_key
        kwargs['x_rapid_api_host'] = \
            x_rapid_api_host
        return self.prediction_endpoint.call_with_http_info(**kwargs)

