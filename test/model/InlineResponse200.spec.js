/*
 * SolarEnergyPrediction
 * AI-based photovoltaic power prediction for unmetered PV plants. Powered by our industry-leading irradiance and real-time weather data.
 *
 * OpenAPI spec version: 1.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SolarEnergyPrediction);
  }
}(this, function(expect, SolarEnergyPrediction) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('InlineResponse200', function() {
      beforeEach(function() {
        instance = new SolarEnergyPrediction.InlineResponse200();
      });

      it('should create an instance of InlineResponse200', function() {
        // TODO: update the code to test InlineResponse200
        expect(instance).to.be.a(SolarEnergyPrediction.InlineResponse200);
      });

      it('should have the property input (base name: "input")', function() {
        // TODO: update the code to test the property input
        expect(instance).to.have.property('input');
        // expect(instance.input).to.be(expectedValueLiteral);
      });

      it('should have the property output (base name: "output")', function() {
        // TODO: update the code to test the property output
        expect(instance).to.have.property('output');
        // expect(instance.output).to.be(expectedValueLiteral);
      });

    });
  });

}));
